/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import net.datafaker.Faker
import java.util.concurrent.Callable


private const val INSTANCE_COUNT = 10_000_000

fun main() {
    val faker = Faker()
    for (i in 1..INSTANCE_COUNT) {
        faker.doWith(seed = i.toLong()) {
            println(faker.football().players())
        }
    }
    println("Set breakpoint here")
    // Now set breakpoint in net.datafaker.providers.base.BaseFaker#getProvider
    Faker().ancient().god()
    // Sleep gives some time to capture a heap dump.
    Thread.sleep(30_000)
}

fun <A> Faker.doWith(seed: Long, callable: Callable<A>): A = this.doWith(callable, seed)
